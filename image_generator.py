import requests
import google.generativeai as genai
import urllib.parse

# 1. –ö–ª—é—á Gemini (Google AI Studio)
GEMINI_API_KEY = "AIzaSyB8Bnk0wR1aKA4tNSjhdtzGJZQ6gmlGGB8"  # –≤—ã–Ω–µ—Å—Ç–∏ –≤ .env!
genai.configure(api_key=GEMINI_API_KEY)

# –ú–æ–¥–µ–ª—å Gemini
gemini_model = genai.GenerativeModel("gemini-2.5-flash-lite-preview-09-2025")

# 2. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–∞—Ä—Ç–∏–Ω–∫–∏ —á–µ—Ä–µ–∑ Pollinations
def generate_pollinations_image(situation, answer):
    prompt = (
        f"Cartoon style illustration for a funny Russian board game card. "
        f"Scene: {situation}. Player action: {answer}. "
        f"Minimalism, humor, bold lines, no text."
    )
    # URL-–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ
    encoded = urllib.parse.quote(prompt, safe='')
    url = f"https://image.pollinations.ai/prompt/{encoded}"
    try:
        resp = requests.get(url, timeout=15)
        resp.raise_for_status()
        # –ü—Ä—è–º–æ–π URL —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
        return resp.url
    except requests.exceptions.RequestException as e:
        print("–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:", e)
        return None

# 3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —à—É—Ç–∫–∏ —á–µ—Ä–µ–∑ Gemini
def generate_card_joke(situation, answer):
    prompt = (
        f"–ü—Ä–∏–¥—É–º–∞–π –∫–æ—Ä–æ—Ç–∫—É—é —è—Ä–∫—É—é —à—É—Ç–∫—É –¥–ª—è –∫–∞—Ä—Ç–æ—á–Ω–æ–π –Ω–∞—Å—Ç–æ–ª—å–Ω–æ–π –∏–≥—Ä—ã –ø–æ —Å–∏—Ç—É–∞—Ü–∏–∏: '{situation}', "
        f"–∏ –æ—Ç–≤–µ—Ç—É –∏–≥—Ä–æ–∫–∞: '{answer}'. –Ø–∑—ã–∫: —Ä—É—Å—Å–∫–∏–π. –§–æ—Ä–º–∞—Ç ‚Äì –º–µ–º, —Å –∏—Ä–æ–Ω–∏–µ–π, –¥–æ 2 —Å—Ç—Ä–æ–∫."
    )
    try:
        response = gemini_model.generate_content(prompt)
        # –¢–µ–∫—Å—Ç –æ–±—ã—á–Ω–æ –≤ response.text
        text = response.text.strip() if response and response.text else "–®—É—Ç–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª–∞—Å—å ü§∑"
    except Exception as e:
        print("–û—à–∏–±–∫–∞ Gemini:", e)
        text = "–®—É—Ç–∫–∞ –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–ª–∞—Å—å ü§∑"
    print("[Gemini] Joke:", text)
    return text

# 4. –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def generate_card_content(situation, answer):
    image_url = generate_pollinations_image(situation, answer)
    joke = generate_card_joke(situation, answer)
    return image_url, joke

# 5. –ü—Ä–∏–º–µ—Ä –∑–∞–ø—É—Å–∫–∞
if __name__ == "__main__":
    situation = "–í–∞—Å –Ω–∞ —Å–≤–∞–¥—å–±–µ –∑–∞—Å—Ç–∞–≤–ª—è—é—Ç —Ç–∞–Ω—Ü–µ–≤–∞—Ç—å –º–∞–∫–∞—Ä–µ–Ω—É –ø–µ—Ä–µ–¥ –≤—Å–µ–º–∏ –≥–æ—Å—Ç—è–º–∏"
    answer = "–Ø –æ—Ç–∫–ª–æ–Ω—è—é—Å—å –Ω–∞–∑–∞–¥ –∏ –≥–æ–≤–æ—Ä—é, —á—Ç–æ —ç—Ç–æ —Ç—Ä–∞–¥–∏—Ü–∏—è –º–æ–µ–≥–æ –Ω–∞—Ä–æ–¥–∞"

    img, joke = generate_card_content(situation, answer)
    print("–°—Å—ã–ª–∫–∞ –Ω–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ:", img)
    print("–®—É—Ç–∫–∞ –¥–ª—è –∫–∞—Ä—Ç–æ—á–∫–∏:", joke)
