import aiohttp
from aiogram import Router, F, Bot
from aiogram.types import CallbackQuery, InlineKeyboardButton, InlineKeyboardMarkup, Message
from aiogram.filters import Command, CommandStart
from aiogram.exceptions import TelegramBadRequest
from typing import Dict, Any

router = Router()

SESSIONS: Dict[int, Dict] = {}

API_KEY = "key_1f8f897a63cd034fa49950b4c4cea0db6b4ae30708b4cbe9674bd1cb9cad71f5893fa54613a1feaa797081e6ff1fd5f9801a5d00a6b611e321c24bfe3344d01c"  # –ü–æ—Å—Ç–∞–≤—å—Ç–µ —Å—é–¥–∞ –≤–∞—à –∫–ª—é—á RunwayML

def main_menu() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data="ui_new_game")],
        [InlineKeyboardButton(text="‚ûï –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", callback_data="ui_join_game")],
        [InlineKeyboardButton(text="üé≤ –ù–æ–≤—ã–π —Ä–∞—É–Ω–¥", callback_data="ui_start_round")],
    ])

async def generate_runway_video_from_text(api_key: str, prompt_text: str) -> str | None:
    url = "https://api.runwayml.com/v1/text_to_video"  # –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π endpoint –≤ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏ RunwayML

    headers = {
        "Authorization": f"Bearer {api_key}",
        "Content-Type": "application/json"
    }
    payload = {
        "model": "gen4_turbo",
        "promptText": prompt_text,
        "ratio": "16:9"
    }

    async with aiohttp.ClientSession() as session:
        async with session.post(url, headers=headers, json=payload) as response:
            if response.status == 200:
                data = await response.json()
                video_url = data.get("videoUrl") or data.get("video_url")
                return video_url
            else:
                error_text = await response.text()
                print(f"RunwayML API error {response.status}: {error_text}")
                return None

@router.message(CommandStart())
async def cmd_start(m: Message):
    await m.answer("–ñ–µ—Å—Ç–∫–∞—è –ò–≥—Ä–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é.", reply_markup=main_menu())

@router.callback_query(F.data == "ui_new_game")
async def ui_new_game(cb: CallbackQuery):
    SESSIONS[cb.message.chat.id] = {
        "players": [],
        "answers": {},
        "host_idx": -1,
        "current_situation": None,
    }
    await cb.answer()
    try:
        await cb.message.edit_text("‚úÖ –ò–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞!", reply_markup=main_menu())
    except TelegramBadRequest:
        pass

@router.callback_query(F.data == "ui_join_game")
async def ui_join_game(cb: CallbackQuery):
    st = SESSIONS.get(cb.message.chat.id)
    if not st:
        await cb.answer("–ò–≥—Ä–∞ –Ω–µ –Ω–∞—á–∞—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É'.", show_alert=True)
        return
    if cb.from_user.id not in st["players"]:
        st["players"].append(cb.from_user.id)
    await cb.answer(f"–í—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª–∏—Å—å! –ò–≥—Ä–æ–∫–æ–≤: {len(st['players'])}")

@router.callback_query(F.data == "ui_start_round")
async def ui_start_round(cb: CallbackQuery):
    st = SESSIONS.get(cb.message.chat.id)
    if not st or len(st["players"]) < 2:
        await cb.answer("–ù—É–∂–Ω–æ –º–∏–Ω–∏–º—É–º 2 –∏–≥—Ä–æ–∫–∞.", show_alert=True)
        return
    st["host_idx"] = (st["host_idx"] + 1) % len(st["players"])
    st["current_situation"] = "–ü—Ä–∏–º–µ—Ä —Å–∏—Ç—É–∞—Ü–∏–∏ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é —Å–∏—Ç—É–∞—Ü–∏—é
    # –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –≤–æ–∑—å–º—ë–º –æ—Ç–≤–µ—Ç –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–≤—à–µ–≥–æ—Å—è –∏–≥—Ä–æ–∫–∞
    answer = "–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è"
    await cb.answer()
    prompt_text = f"–°–∏—Ç—É–∞—Ü–∏—è: {st['current_situation']}. –û—Ç–≤–µ—Ç: {answer}. –ê–Ω–∏–º–∞—Ü–∏—è, –≤—ã—Ä–∞–∑–∏—Ç–µ–ª—å–Ω—ã–π —Å—Ç–∏–ª—å, –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –≤–∏–¥–µ–æ–∫–ª–∏–ø."
    video_url = await generate_runway_video_from_text(API_KEY, prompt_text)
    if video_url:
        await cb.message.answer("–°–º–æ—Ç—Ä–∏—Ç–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –≤–∏–¥–µ–æ:")
        await cb.bot.send_video(cb.message.chat.id, video=video_url)
    else:
        await cb.message.answer("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –≤–∏–¥–µ–æ.")

# –û—Å—Ç–∞–ª—å–Ω–æ–π –∫–æ–¥ –∏–≥—Ä—ã (–æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–æ–≤, –≤—ã–±–æ—Ä –ø–æ–±–µ–¥–∏—Ç–µ–ª—è) –¥–æ–±–∞–≤–ª—è–π—Ç–µ –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –∏ –∏–Ω—Ç–µ–≥—Ä–∏—Ä—É–π—Ç–µ –≤—ã–∑–æ–≤ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–∏–¥–µ–æ –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ –≤—ã—à–µ

