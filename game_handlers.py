from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import (
    Message,
    InlineKeyboardMarkup,
    InlineKeyboardButton,
    CallbackQuery
)
from game_utils import send_random_situation_with_image, get_random_situation

router = Router()

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –æ—Å–Ω–æ–≤–Ω—ã–º–∏ –¥–µ–π—Å—Ç–≤–∏—è–º–∏
def main_menu_kb() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text="‚ñ∂Ô∏è –ù–∞—á–∞—Ç—å –∏–≥—Ä—É", callback_data="new_game"),
                InlineKeyboardButton(text="‚ûï –ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è", callback_data="join_game"),
                InlineKeyboardButton(text="üé≤ –ù–æ–≤—ã–π —Ä–∞—É–Ω–¥", callback_data="start_round"),
            ]
        ]
    )

# –°—Ç–∞—Ä—Ç–æ–≤–∞—è –∫–æ–º–∞–Ω–¥–∞
@router.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer(
        "üéÆ **–ñ–µ—Å—Ç–∫–∞—è –ò–≥—Ä–∞**\n\n"
        "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –∫–Ω–æ–ø–∫–æ–π –∏–ª–∏ –∫–æ–º–∞–Ω–¥–æ–π:\n"
        "/new_game ‚Äî –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É\n"
        "/join_game ‚Äî –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∏–≥—Ä–µ\n"
        "/start_round ‚Äî –∑–∞–ø—É—Å—Ç–∏—Ç—å –Ω–æ–≤—ã–π —Ä–∞—É–Ω–¥",
        parse_mode="Markdown",
        reply_markup=main_menu_kb()
    )

# /new_game
@router.message(Command("new_game"))
async def cmd_new_game(message: Message):
    # –ó–¥–µ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–π—Ç–µ –Ω–æ–≤—É—é –∏–≥—Ä—É: –æ—á–∏—â–∞–π—Ç–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ, —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ –∏ —Ç.–ø.
    # –î–ª—è –ø—Ä–∏–º–µ—Ä–∞ –ø—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç.
    await message.answer("‚úÖ –ò–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞! –ñ–¥—ë–º, –ø–æ–∫–∞ –∏–≥—Ä–æ–∫–∏ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è—Ç—Å—è.", reply_markup=main_menu_kb())

@router.callback_query(F.data == "new_game")
async def cb_new_game(callback: CallbackQuery):
    await callback.answer("–ò–≥—Ä–∞ –Ω–∞—á–∞—Ç–∞!", show_alert=False)
    await callback.message.edit_reply_markup(reply_markup=main_menu_kb())

# /join_game
@router.message(Command("join_game"))
async def cmd_join_game(message: Message):
    user = message.from_user.full_name or message.from_user.username
    # –î–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏–∫—É: —Å–æ—Ö—Ä–∞–Ω–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤
    await message.answer(f"‚ûï **{user}** –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!", parse_mode="Markdown", reply_markup=main_menu_kb())

@router.callback_query(F.data == "join_game")
async def cb_join_game(callback: CallbackQuery):
    user = callback.from_user.full_name or callback.from_user.username
    await callback.answer(show_alert=False)
    await callback.message.answer(f"‚ûï **{user}** –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –∏–≥—Ä–µ!", parse_mode="Markdown")

# /start_round
@router.message(Command("start_round"))
async def cmd_start_round(message: Message):
    host = message.from_user.full_name or message.from_user.username
    await message.answer(
        f"üé¨ **–†–∞—É–Ω–¥ –∑–∞–ø—É—â–µ–Ω!**\nüëë **–í–µ–¥—É—â–∏–π:** {host}",
        parse_mode="Markdown"
    )
    ok = await send_random_situation_with_image(message.bot, message.chat.id)
    if ok:
        await message.answer("‚úÖ –°–∏—Ç—É–∞—Ü–∏—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!", parse_mode="Markdown")
    else:
        await message.answer("‚ö†Ô∏è –°–∏—Ç—É–∞—Ü–∏—è –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.", parse_mode="Markdown")

@router.callback_query(F.data == "start_round")
async def cb_start_round(callback: CallbackQuery):
    host = callback.from_user.full_name or callback.from_user.username
    await callback.answer(show_alert=False)
    await callback.message.answer(
        f"üé¨ **–†–∞—É–Ω–¥ –∑–∞–ø—É—â–µ–Ω!**\nüëë **–í–µ–¥—É—â–∏–π:** {host}",
        parse_mode="Markdown"
    )
    ok = await send_random_situation_with_image(callback.bot, callback.message.chat.id)
    if ok:
        await callback.message.answer("‚úÖ –°–∏—Ç—É–∞—Ü–∏—è –∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã!", parse_mode="Markdown")
    else:
        await callback.message.answer("‚ö†Ô∏è –°–∏—Ç—É–∞—Ü–∏—è –±–µ–∑ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞.", parse_mode="Markdown")

# –¢–µ–∫—Å—Ç–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã –≤ —á–∞—Ç–µ –±–µ–∑ –∫–Ω–æ–ø–æ–∫
@router.message()
async def unknown(message: Message):
    await message.answer(
        "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞.\n"
        "–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /new_game, /join_game –∏–ª–∏ /start_round.",
        parse_mode="Markdown",
        reply_markup=main_menu_kb()
    )
