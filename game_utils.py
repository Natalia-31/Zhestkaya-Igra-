# game_utils/gen.py ‚Äî –∏–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è (–∑–∞–≥–ª—É—à–∫–∞) + –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ —á–µ—Ä–µ–∑ Runway
import os
import asyncio
import aiohttp
from aiogram import Bot

RUNWAY_API_KEY = os.getenv("RUNWAY_API_KEY")
RUNWAY_BASE = "https://api.runwayml.com/v1"

async def send_illustration(bot: Bot, chat_id: int, situation: str, answer: str) -> str | None:
    """
    –í–ê–®–ê —Ç–µ–∫—É—â–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è.
    –ó–¥–µ—Å—å –∑–∞–≥–ª—É—à–∫–∞: –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ–∫—Å—Ç –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç None.
    –ï—Å–ª–∏ —É –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ä–µ–∞–ª—å–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä, —á–µ—Ä–µ–∑ SD/Replicate),
    –≤–µ—Ä–Ω–∏—Ç–µ –ø—É–±–ª–∏—á–Ω—ã–π URL –∫–∞—Ä—Ç–∏–Ω–∫–∏ ‚Äî –æ–Ω –ø–æ–π–¥—ë—Ç –∫–∞–∫ reference_image_url –≤ –≤–∏–¥–µ–æ.
    """
    await bot.send_message(chat_id, f"üñºÔ∏è –ò–ª–ª—é—Å—Ç—Ä–∞—Ü–∏—è: {situation}\n‚Äî {answer}")
    return None  # –≤–µ—Ä–Ω–∏—Ç–µ URL, –µ—Å–ª–∏ –æ–Ω —É –≤–∞—Å –µ—Å—Ç—å

async def _runway_create_task(session: aiohttp.ClientSession, payload: dict) -> dict:
    headers = {
        "Authorization": f"Bearer {RUNWAY_API_KEY}",
        "Content-Type": "application/json",
    }
    async with session.post(f"{RUNWAY_BASE}/tasks", json=payload, headers=headers) as resp:
        if resp.status >= 400:
            text = await resp.text()
            raise RuntimeError(f"Runway create failed {resp.status}: {text}")
        return await resp.json()

async def _runway_get_task(session: aiohttp.ClientSession, task_id: str) -> dict:
    headers = {"Authorization": f"Bearer {RUNWAY_API_KEY}"}
    async with session.get(f"{RUNWAY_BASE}/tasks/{task_id}", headers=headers) as resp:
        if resp.status >= 400:
            text = await resp.text()
            raise RuntimeError(f"Runway get failed {resp.status}: {text}")
        return await resp.json()

async def send_runway_video(
    bot: Bot,
    chat_id: int,
    situation: str,
    answer: str,
    reference_image_url: str | None = None,
    duration: int = 5,
    model: str = "gen_4_turbo",
):
    """
    –°–æ–∑–¥–∞—ë—Ç –≤–∏–¥–µ–æ –ø–æ —Å–∏—Ç—É–∞—Ü–∏–∏ –∏ –ø–æ–±–µ–¥–∏–≤—à–µ–º—É –æ—Ç–≤–µ—Ç—É —á–µ—Ä–µ–∑ Runway API –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤ —á–∞—Ç.
    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç image-to-video –ø—Ä–∏ –Ω–∞–ª–∏—á–∏–∏ reference_image_url, –∏–Ω–∞—á–µ text-to-video.
    """
    if not RUNWAY_API_KEY:
        await bot.send_message(chat_id, "‚ö†Ô∏è RUNWAY_API_KEY –Ω–µ –∑–∞–¥–∞–Ω –≤ –æ–∫—Ä—É–∂–µ–Ω–∏–∏.")
        return

    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—Ä–æ–º–ø—Ç
    prompt = f"{situation}. Then: {answer}. Cinematic camera, smooth motion, realistic lighting."

    payload = {
        "model": model,
        "input": {
            "prompt": prompt,
            "duration": duration,
        }
    }
    if reference_image_url:
        payload["input"]["image"] = reference_image_url  # image-to-video —Ä–µ–∂–∏–º

    # –°–æ–æ–±—â–µ–Ω–∏–µ –æ —Å—Ç–∞—Ä—Ç–µ
    await bot.send_message(chat_id, "üé• –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –≤–∏–¥–µ–æ –≤ Runway‚Ä¶ –ø–æ–¥–æ–∂–¥–∏—Ç–µ 30‚Äì90 —Å–µ–∫—É–Ω–¥.")

    try:
        timeout = aiohttp.ClientTimeout(total=900)  # –¥–æ 15 –º–∏–Ω—É—Ç –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        async with aiohttp.ClientSession(timeout=timeout) as session:
            # 1) —Å–æ–∑–¥–∞—ë–º –∑–∞–¥–∞—á—É
            task = await _runway_create_task(session, payload)
            task_id = task.get("id")

            if not task_id:
                await bot.send_message(chat_id, "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞—á—É –≤ Runway (–ø—É—Å—Ç–æ–π task_id).")
                return

            # 2) –æ–ø—Ä–æ—Å —Å—Ç–∞—Ç—É—Å–∞
            attempts = 0
            while True:
                await asyncio.sleep(2)
                attempts += 1
                data = await _runway_get_task(session, task_id)
                status = data.get("status")
                if status in ("SUCCEEDED", "FAILED", "CANCELED", "THROTTLED"):
                    if status == "SUCCEEDED":
                        output = data.get("output", {}) or {}
                        # –ü–æ –¥–æ–∫–∞–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç ‚Äî URL(—ã), –∏–Ω–æ–≥–¥–∞ –∫–ª—é—á –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è video/url
                        video_url = (
                            output.get("video")
                            or output.get("output_video")
                            or output.get("url")
                        )
                        if not video_url:
                            await bot.send_message(chat_id, "‚ö†Ô∏è –í–∏–¥–µ–æ –≥–æ—Ç–æ–≤–æ, –Ω–æ —Å—Å—ã–ª–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
                            return
                        # 3) –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∫ –≤–∏–¥–µ–æ
                        await bot.send_video(chat_id, video=video_url, caption="üé¨ Runway –≤–∏–¥–µ–æ –ø–æ –ø–æ–±–µ–¥–∏–≤—à–µ–º—É –æ—Ç–≤–µ—Ç—É")
                        return
                    elif status == "THROTTLED":
                        # –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∞ –ø–æ concurrency ‚Äî –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–æ–∂–¥–∞—Ç—å –¥–æ–ª—å—à–µ
                        await bot.send_message(chat_id, "‚è≥ –û—á–µ—Ä–µ–¥—å Runway –∑–∞–Ω—è—Ç–∞ (THROTTLED). –ñ–¥—ë–º‚Ä¶")
                        # –∏ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º polling
                    else:
                        err = data.get("error") or "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"
                        await bot.send_message(chat_id, f"‚ùå Runway –æ—à–∏–±–∫–∞: {err}")
                        return

                # —Ç–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è
                if attempts > 600:  # ~20 –º–∏–Ω—É—Ç
                    await bot.send_message(chat_id, "‚è±Ô∏è –¢–∞–π–º–∞—É—Ç –æ–∂–∏–¥–∞–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç Runway.")
                    return

    except Exception as e:
        await bot.send_message(chat_id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ Runway: {e}")
